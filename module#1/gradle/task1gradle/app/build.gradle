

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id'java'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
   
    

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
	

}

application {
    // Define the main class for the application.
    mainClass = 'by.epam.shamuradova.gradle.task1.StringUtils'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

version = '1.3.5'

task hello {
   doLast {
      println 'tutorialspoint'
   }
}
task upper {
   String expString = 'TUTORIALS point'
   println "Original: " + expString
   println "Upper case: " + expString.toUpperCase()
}
